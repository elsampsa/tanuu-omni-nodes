apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: tanuunodegroup
  labels:
    provider: google
    cluster: gke
spec:
  compositeTypeRef:
    apiVersion: tanuu.dev/v1alpha1
    kind: NodeGroup
  mode: Pipeline
  pipeline:
  # - functionRef:
  #     name: function-patch-and-transform
  #   step: patch-and-transform
  #   input:
  #     apiVersion: pt.fn.crossplane.io/v1beta1
  #     kind: Resources
  #     resources:
  #     - name: dummy-pod
  #       base:
  #         apiVersion: kubernetes.crossplane.io/v1alpha1
  #         kind: Object
  #         metadata:
  #           name: dummy-pod
  #         spec:
  #           forProvider:
  #             manifest:
  #               apiVersion: v1
  #               kind: Namespace
  #               metadata:
  #                 name: dummy
  - functionRef:
      name: function-go-templating
    step: schema
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: "{{- range (untilStep 0 (int $.observed.composite.resource.spec.parameters.replicas ) 1) }}          \n---\napiVersion: compute.gcp.upbound.io/v1beta1\nkind: Instance\nmetadata:\n  generateName: {{ $.observed.composite.resource.spec.id }}-\n  annotations:\n    meta.upbound.io/instance-id: compute/v1beta1/{{ $.observed.composite.resource.spec.id }}\n    gotemplating.fn.crossplane.io/composition-resource-name: {{ $.observed.composite.resource.spec.id }}-{{ . }}\n  labels:\n    testing.upbound.io/instance-name: {{ $.observed.composite.resource.spec.id }}\nspec:\n  forProvider:\n    bootDisk:\n      - deviceName: talos-instances\n        initializeParams:\n          - image: {{ $.observed.composite.resource.spec.parameters.image }}\n            size: {{ $.observed.composite.resource.spec.parameters.size }}\n            type: {{ $.observed.composite.resource.spec.parameters.imageType }}\n    machineType: {{ $.observed.composite.resource.spec.parameters.machineType }}\n    networkInterface:\n      - accessConfig:\n          - networkTier: PREMIUM\n        network: default\n        stackType: IPV4_ONLY\n    {{ if (contains \"g2\" $.observed.composite.resource.spec.parameters.machineType) }}\n    scheduling:\n      - onHostMaintenance: TERMINATE\n      {{ end }}\n    serviceAccount: \n      - email: {{ $.observed.composite.resource.spec.parameters.serviceAccountEmail }}\n        scopes:\n          - https://www.googleapis.com/auth/devstorage.read_only\n          - https://www.googleapis.com/auth/logging.write\n          - https://www.googleapis.com/auth/monitoring.write\n          - https://www.googleapis.com/auth/servicecontrol\n          - https://www.googleapis.com/auth/service.management.readonly\n          - https://www.googleapis.com/auth/trace.append\n    zone: {{ $.observed.composite.resource.spec.parameters.zone }}\n{{- end -}}\n"
  - functionRef:
      name: function-auto-ready
    step: automatically-detect-ready-composed-resources
